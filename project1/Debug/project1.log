  game.cpp
  game_state_play.cpp
  main.cpp
  texture_manager.cpp
c:\users\joe\documents\visual studio 2017\projects\hometown\project1\texture_manager.cpp(28): warning C4101: 'e': unreferenced local variable
c:\users\joe\documents\visual studio 2017\projects\hometown\project1\texture_manager.cpp(37): warning C4101: 'e': unreferenced local variable
c:\users\joe\documents\visual studio 2017\projects\hometown\project1\texture_manager.cpp(51): warning C4101: 'e': unreferenced local variable
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\tuple(1306): error C2832: 'std::pair<const _Kty,_Ty>::second': a reference type cannot be value-initialized
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\utility(320): note: see declaration of 'std::pair<const _Kty,_Ty>::second'
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\tuple(1321): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<size_t>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &,
              _Tuple1=std::tuple<const std::string &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\tuple(1318): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>,0,>(_Tuple1 &,_Tuple2 &,std::integer_sequence<unsigned int,0>,std::integer_sequence<size_t>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &,
              _Tuple1=std::tuple<const std::string &>,
              _Tuple2=std::tuple<>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(881): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xmemory0(881): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(std::piecewise_construct_t,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xtree(984): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,sf::Texture &>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,sf::Texture &>>>::void_pointer>>,
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Objty=std::pair<const std::string,sf::Texture &>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xtree(983): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(_Alloc &,_Objty *const ,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,sf::Texture &>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,sf::Texture &>>>::void_pointer>>,
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Objty=std::pair<const std::string,sf::Texture &>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xtree(1162): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Alloc=std::allocator<std::pair<const std::string,sf::Texture &>>,
              _Traits=std::_Tmap_traits<std::string,sf::Texture &,std::less<std::string>,std::allocator<std::pair<const std::string,sf::Texture &>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\xtree(1162): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Alloc=std::allocator<std::pair<const std::string,sf::Texture &>>,
              _Traits=std::_Tmap_traits<std::string,sf::Texture &,std::less<std::string>,std::allocator<std::pair<const std::string,sf::Texture &>>,false>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(232): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,sf::Texture&,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,sf::Texture &>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(232): note: see reference to function template instantiation 'std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,sf::Texture&,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &> &&,std::tuple<> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,sf::Texture &>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(248): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string,
              _Keyty=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(248): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<const std::basic_string<char,std::char_traits<char>,std::allocator<char>>&,>(_Keyty)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string,
              _Keyty=const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(363): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(363): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Ty=std::pair<const std::string,sf::Texture &>,
              _Kty=std::string
          ]
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\map(362): note: while compiling class template member function 'sf::Texture &std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)'
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\users\joe\documents\visual studio 2017\projects\hometown\project1\texture_manager.cpp(19): note: see reference to function template instantiation 'sf::Texture &std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  c:\users\joe\documents\visual studio 2017\projects\hometown\project1\texture_manager.h(22): note: see reference to class template instantiation 'std::map<std::string,sf::Texture &,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>' being compiled
          with
          [
              _Kty=std::string,
              _Ty=sf::Texture &
          ]
  Generating Code...
